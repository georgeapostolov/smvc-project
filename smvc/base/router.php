<?
	class base_router {
		public static $controller;		public static $action;		public static $module;		public static $params = [];		public static $query = [];		public static $controller_file;		public static $controller_path;		public static $controller_raw_path;		public static $controller_common_file;		public function __construct() {			if (is_dir(CONTROLLER_DIR)) {				self::$controller_raw_path = self::$controller_path = CONTROLLER_DIR;			}			else {				throw new base_exception('Invalid controller path: "' . CONTROLLER_DIR . '"');			}			$root_url = mb_substr(mb_strrchr(ROOT_URL, "://"), 3);			$url = trim(mb_substr(mb_strrchr(CURRENT_URL, $root_url), mb_strlen($root_url)), '/');			if (isset($_SERVER['argv'])) { // cronjob or shell, lets save it to DB				$db = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);				if (!mysqli_connect_errno()) {					if ($db->set_charset('utf8')) {						$db->query('							INSERT INTO `cronjobs` SET								`server_data` = "' . $db->escape_string(json_encode($_SERVER)) . '",								`date_added` = UNIX_TIMESTAMP()						');					}				}				if (empty($url) && isset($_SERVER['argv'][1])) {					$url = $_SERVER['argv'][1];				}			}			$pos = mb_strrpos($url, DEFAULT_EXTENSION);			if ($pos !== false) {				$url = mb_substr($url, 0, $pos);			}			if (mb_substr($url, 0, mb_strlen(DEFAULT_ADMINPREFIX)) == DEFAULT_ADMINPREFIX) {				$url = mb_substr($url, mb_strlen(DEFAULT_ADMINPREFIX) + 1, mb_strlen($url));				self::$module = 'admin';				self::$controller_path = self::$controller_raw_path . 'admin' . DS;			}			else {				self::$module = 'public';				self::$controller_path = self::$controller_raw_path . 'public' . DS;			}			if (empty($url)) {				self::$params = array('index');			}			else {				$tmp_q = explode('?', $url);				$qparams = [];				if (1 < count($tmp_q)) {					$url = rtrim($tmp_q[0], '/');					$tmp = explode('&', $tmp_q[1]);					foreach ($tmp as $k => $v) {						$iparams = explode('=', $v);						if (1 < count($iparams)) {							$qparams[$iparams[0]] = $iparams[1];						}						else {							$qparams[] = $v;						}					}				}				self::$query = $qparams;				$eparams = explode('/', $url);				$params = array();				foreach ($eparams as $k => $v) {					$iparams = explode(':', $v);					if (1 < count($iparams)) {						$params[$iparams[0]] = $iparams[1];					}					else {						$params[] = $v;					}				}				self::$params = $params;			}			if (empty(self::$params[0])) {				$controller = 'index';			}			else {				$controller = array_shift(self::$params);			}			if (empty(self::$params[0])) {				$action = 'index';			} else {				$action = array_shift(self::$params);			}			self::$action = $action;			self::$controller = $controller;			self::$controller_common_file = self::$controller_path . 'common.php';			if (file_exists(self::$controller_common_file)) {				$class_common = 'controller_' . self::$module . '_common';				$common_controller = new $class_common();				$common_controller->router = $this;				$common_controller->index();			}			else {				throw new base_exception('Common Controller not found: "' . self::$_controller_common_file . '"');			}			self::$controller_file = self::$controller_path . self::$controller . '.php';			if (file_exists(self::$controller_file)) {				$class = 'controller_' . self::$module . '_' . self::$controller;			}			else {				throw new base_exception('Controller not found: "' . self::$controller_file . '"');			}			$controller = new $class();			$controller->router = $this;			if (method_exists($controller, $action)) {				$controller->$action();			}			else {				throw new base_exception('Undefined method called "' . self::$action . '" in "' . self::$controller_file . '"');			}		}	}
