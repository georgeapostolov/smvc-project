<?	class controller_public_profile extends base_controller {		public $debug = false;		public function __construct() {			parent::__construct();			if ($this->user->is_logged == 0) {				header('Location: ' . ROOT_URL . 'login');				exit;			}		}		public function index() {			$this->view->set('title', 'Profile');			$this->view->display('profile/index');		}		public function changepassword() {			$error = false;			$success = false;			if (!empty($_POST)) {				$user = new model_public_user();				$require_tfa = $this->user->data['tfa_enabled'];				$tfa_verified = false;				if ($this->user->data['tfa_enabled']) {					if (isset($_POST['tfa']) && $_POST['tfa']) {						if (mb_strlen($_POST['tfa']) == 6) {							$secretkey = $user->get_tfa_secret($this->user->id);							$tfa_verified = model_admin_tfa::verify($secretkey, $_POST['tfa']);							if ($tfa_verified == false) {								$error = 'Wrong 2FA code';							}						} else {							$error = 'Wrong 2FA code length';						}					} else {						$error = 'No 2FA code specified';					}				}				$current_password = (isset($_POST['current_password']) && $_POST['current_password'] ? trim($_POST['current_password']) : '');				$new_password = (isset($_POST['new_password']) && $_POST['new_password'] ? trim($_POST['new_password']) : '');				$confirm_password = ($_POST['confirm_password'] && $_POST['confirm_password'] ? trim($_POST['confirm_password']) : '');								if (empty($current_password) || empty($new_password) || empty($confirm_password)) {					$error = 'Passwords cannot be empty';				} else {					if (($current_password == $new_password) || ($current_password == $confirm_password)) {						$error = 'Passwords cannot be the same';					} else {						if ($new_password != $confirm_password) {							$error = 'Wrong confirm password';						}					}				}									if ($error == false) {					$current_password = crypt(trim($current_password), '$2a$09$' . md5($user->get_password_salt()) . '$');					$db_current_password = $user->get_password($this->user->id);					if ($current_password == $db_current_password) {						$db_password = crypt(trim($new_password), '$2a$09$' . md5($user->get_password_salt()) . '$');						$success = $user->change_password($this->user->id, $current_password, $db_password);					} else {						$error = 'Current password is wrong';					}				}			}			$this->view->set('success', $success);			$this->view->set('error', $error);			$this->view->set('title', 'Profile - Change password');			$this->view->set('user', $this->user);			$this->view->display('profile/change_password');		}		public function tfa() {			$error = false;			$success = false;			if (!empty($_POST)) {				if (isset($_POST['action']) && $_POST['action'] == 'tfa_enable') {					if (isset($_POST['tfa'], $_POST['tfas']) && $_POST['tfa'] && $_POST['tfas']) {						if (mb_strlen($_POST['tfa']) == 6) {							$user = new model_public_user();							$code = trim($_POST['tfa']);							$secretkey = trim($_POST['tfas']);							$tfa_verified = model_admin_tfa::verify($secretkey, $code);							if ($tfa_verified) {								$user->add_tfa_secret($this->user->id, $secretkey);								header('Location: ' . ROOT_URL . 'profile/tfa');								exit;							} else {								$error = 'Wrong 2FA code';							}						} else {							$error = 'Wrong 2FA code length';						}					}				}				if (isset($_POST['action']) && $_POST['action'] == 'tfa_disable') {					if (isset($_POST['tfa']) && $_POST['tfa']) {						if (mb_strlen($_POST['tfa']) == 6) {							$user = new model_public_user();							$secretkey = $user->get_tfa_secret($this->user->id);							$tfa_verified = model_admin_tfa::verify($secretkey, $_POST['tfa']);							if ($tfa_verified) {								$user->remove_tfa_secret($this->user->id, $secretkey);								header('Location: ' . ROOT_URL . 'profile/tfa');								exit;							} else {								$error = 'Wrong 2FA code';							}						} else {							$error = 'Wrong 2FA code length';						}					}				}			}			$this->view->set('success', $success);			$this->view->set('error', $error);			$this->view->set('title', 'Profile - TFA');			$this->view->set('user', $this->user);			$this->view->display('profile/tfa');		}
	}